.emphasis {
	font-style: italic;
}

.strong {
	font-weight: bold;
}

.header {
	color: rgb(0, 0, 128);
}

.comment {
	color: rgb(0, 128, 0);
}

.constant.language {
	color: rgb(0, 0, 255);
}

.constant.numeric {
	color: rgb(9, 136, 90);
}

.constant.regexp {
	color: rgb(129, 31, 63);
}

.constant.rgb-value {
	color: rgb(4, 81, 165);
}

.entity.name.tag {
	color: rgb(128, 0, 0);
}

.entity.name.selector {
	color: rgb(128, 0, 0);
}

.entity.other.attribute-name {
	color: rgb(255, 0, 0);
}

.entity.other.attribute-name.css {
	color: rgb(128, 0, 0);
}

.entity.other.attribute-name.scss {
	color: rgb(128, 0, 0);
}

.invalid {
	color: rgb(205, 49, 49);
}

.markup.underline {
	text-decoration: underline;
}

.markup.bold {
	font-weight: bold;
	color: rgb(0, 0, 128);
}

.markup.heading {
	font-weight: bold;
	color: rgb(128, 0, 0);
}

.markup.italic {
	font-style: italic;
}

.markup.inserted {
	color: rgb(9, 136, 90);
}

.markup.deleted {
	color: rgb(163, 21, 21);
}

.markup.changed {
	color: rgb(4, 81, 165);
}

.markup.punctuation.quote.beginning {
	color: rgb(4, 81, 165);
}

.markup.punctuation.list.beginning {
	color: rgb(4, 81, 165);
}

.markup.inline.raw {
	font-family: monospace;
	font-style: normal;
	color: rgb(128, 0, 0);
}
.markup.raw {
	font-family: monospace;
	font-style: normal;
	color: rgb(128, 0, 0);
}
.markup.quote {
	font-style: italic;
}
.markup.strikethrough {
	text-decoration: line-through;
}

.meta.selector {
	color: rgb(128, 0, 0);
}

.meta.tag {
	color: rgb(128, 0, 0);
}

.meta.preprocessor {
	color: rgb(0, 0, 255);
}

.meta.preprocessor.string {
	color: rgb(163, 21, 21);
}

.meta.preprocessor.numeric {
	color: rgb(9, 136, 90);
}

.meta.structure.dictionary.key.python {
	color: rgb(4, 81, 165);
}

.storage {
	color: rgb(0, 0, 255);
}

.storage.type {
	color: rgb(0, 0, 255);
}

.storage.modifier {
	color: rgb(0, 0, 255);
}

.string {
	color: rgb(163, 21, 21);
}

.string.xml {
	color: rgb(0, 0, 255);
}

.string.jade {
	color: rgb(0, 0, 255);
}

.string.yaml {
	color: rgb(0, 0, 255);
}

.string.html {
	color: rgb(0, 0, 255);
}

.string.regexp {
	color: rgb(129, 31, 63);
}

.support.property-value {
	color: rgb(4, 81, 165);
}

.support.type.property-name.css {
	color: rgb(255, 0, 0);
}

.support.type.property-name.less {
	color: rgb(255, 0, 0);
}

.support.type.property-name.scss {
	color: rgb(255, 0, 0);
}

.support.type.property-name {
	color: rgb(4, 81, 165);
}

.keyword {
	color: rgb(0, 0, 255);
}

.keyword.control {
	color: rgb(0, 0, 255);
}

.keyword.operator {
	color: rgb(0, 0, 0);
}

.keyword.operator.new {
	color: rgb(0, 0, 255);
}

.keyword.other.unit {
	color: rgb(9, 136, 90);
}

.keyword.control.less {
	color: rgb(128, 0, 0);
}

.metatag.php {
	color: rgb(128, 0, 0);
}

.support.function.git-rebase {
	color: rgb(4, 81, 165);
}

.constant.sha.git-rebase {
	color: rgb(9, 136, 90);
}

.storage.modifier.import.java {
	color: rgb(0, 0, 0);
}

.storage.modifier.package.java {
	color: rgb(0, 0, 0);
}

.meta.type.name {
	color: rgb(38, 127, 153);
}

.meta.return.type {
	color: rgb(38, 127, 153);
}

.meta.return-type {
	color: rgb(38, 127, 153);
}

.meta.cast {
	color: rgb(38, 127, 153);
}

.meta.type.annotation {
	color: rgb(38, 127, 153);
}

.support.type {
	color: rgb(38, 127, 153);
}

.entity.name.class {
	color: rgb(38, 127, 153);
}

.entity.name.type {
	color: rgb(38, 127, 153);
}

.storage.type.cs {
	color: rgb(38, 127, 153);
}

.storage.type.java {
	color: rgb(38, 127, 153);
}

.entity.name.function {
	color: rgb(121, 94, 38);
}

.entity.name.method {
	color: rgb(121, 94, 38);
}

.keyword.control {
	color: rgb(175, 0, 219);
}

.meta.parameter.type.variable {
	color: rgb(0, 16, 128);
}

.variable.parameter {
	color: rgb(0, 16, 128);
}

.variable {
	color: rgb(0, 16, 128);
}

.variable.name {
	color: rgb(0, 16, 128);
}

.editor { background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); }
.editor.lineHighlight  {background-color:  rgb(238, 238, 238); }
.editor.selection {}